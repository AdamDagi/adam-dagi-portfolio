[{"/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/index.js":"1","/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/App.js":"2","/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/pages/home.jsx":"3","/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/pages/layout.jsx":"4","/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/pages/resume.jsx":"5","/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/pages/contact.jsx":"6","/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/pages/portfolio.jsx":"7","/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/components/Footer.jsx":"8","/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/components/Header.jsx":"9"},{"size":309,"mtime":1644436678367,"results":"10","hashOfConfig":"11"},{"size":783,"mtime":1644436990342,"results":"12","hashOfConfig":"11"},{"size":1958,"mtime":1644434173685,"results":"13","hashOfConfig":"11"},{"size":379,"mtime":1644437451273,"results":"14","hashOfConfig":"11"},{"size":1478,"mtime":1644555318318,"results":"15","hashOfConfig":"11"},{"size":3631,"mtime":1644613111416,"results":"16","hashOfConfig":"11"},{"size":5310,"mtime":1644538633928,"results":"17","hashOfConfig":"11"},{"size":1804,"mtime":1644539943725,"results":"18","hashOfConfig":"11"},{"size":711,"mtime":1644523515405,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uq705s",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/index.js",[],[],"/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/App.js",[],[],"/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/pages/home.jsx",[],[],"/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/pages/layout.jsx",[],[],"/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/pages/resume.jsx",[],[],"/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/pages/contact.jsx",["48","49"],[],"import React, { useEffect, useRef, useState } from \"react\";\n  \nconst Contact = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [message, setMessage] = useState('');\n    const [hasError, setError] = useState(false);\n    const [hasEmailError, setEmailError] = useState(false);\n    const [hasMessageError, setmessageError] = useState(false);\n    const nameBlurData = () => {\n        if (name === '') {\n          setError(true);\n          return;\n        }\n        setError(false);\n    };\n    const emailBlurData = () => {\n        const isValidEmail = /^([a-z0-9_.-]+)@([\\da-z.-]+).([a-z.]{2,6})$/.test(email);\n        if (isValidEmail) {\n            setEmailError(false);\n        } else {\n            setEmailError(true);\n        }\n    };\n    const messageBlurData = () => {\n        if (message === '') {\n            setmessageError(true);\n          return;\n        }\n        setmessageError(false);\n    };\n    const validateForm = () => {\n        nameBlurData();\n        emailBlurData();\n        messageBlurData();\n    };\n    return (\n        <div className='ContactForm'>\n            <form  className='contactForm' id='contact-form' noValidate>\n                <div className=\"contact-header-cont\">\n                    <div className=\"contact-header\">\n                        <h1>CONTACT ME</h1>\n                    </div>\n                </div>\n                {/* Row 1 of form */}\n                <div className='FormHeader'>\n                    <div className='NameInput'>\n                        <input\n                            type='text'\n                            name='name'\n                            className='nameInput errorInput'\n                            placeholder='Name'\n                            onBlur={() => nameBlurData()}\n                            onChange={e => setName(e.target.value)}\n                        />\n                        {hasError ? <p style={{ color: 'red' }}>Name is required</p> : null}\n                    </div>\n                    <div className='EmailInput'>\n                        <input\n                            type='email'\n                            name='email'\n                            className='emailInput errorInput'\n                            placeholder='Email address' \n                            onBlur={() => emailBlurData()}\n                            onChange={e => setEmail(e.target.value)}\n                        />\n                        {hasEmailError ? <p style={{ color: 'red' }}>Email is incorrect or empty</p> : null}\n                    </div>\n                </div>\n                {/* Row 2 of form */}\n                <div className='MessageInputConteiner'>\n                    <div className='MessageInput'>\n                        <textarea\n                            rows={3}\n                            name='message'\n                            className='messageInput errorInput'\n                            placeholder='Message'\n                            onBlur={() => messageBlurData()}\n                            onChange={e => setMessage(e.target.value)}\n                        />\n                        {hasMessageError ? <p style={{ color: 'red' }}>Message is required</p> : null}\n                    </div>\n                </div>\n                <div className='SubmitButtonConteiner'>\n                    <button onClick={() => validateForm()} className='submit-btn' type='submit'>\n                    Submit\n                    </button>\n                </div>\n            </form>\n                        \n        </div>\n    );\n};\n\nexport default Contact;","/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/pages/portfolio.jsx",[],[],"/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/components/Footer.jsx",[],[],"/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/components/Header.jsx",[],[],{"ruleId":"50","severity":1,"message":"51","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":26},{"ruleId":"50","severity":1,"message":"54","line":1,"column":28,"nodeType":"52","messageId":"53","endLine":1,"endColumn":34},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used."]