{"ast":null,"code":"var _jsxFileName = \"/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/pages/contact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState({\n    value: \"\",\n    hasError: false,\n    touched: false\n  });\n  const [message, setMessage] = useState('');\n\n  const nameBlurData = e => {\n    let hasError = false;\n\n    if (e.target.value === '') {\n      hasError = true;\n    }\n\n    setName(currentValue => ({ ...currentValue,\n      value: e.target.value,\n      hasError\n    }));\n  };\n\n  const emailBlurData = e => {\n    let hasError = false;\n    const isValidEmail = /^([a-z0-9_.-]+)@([\\da-z.-]+).([a-z.]{2,6})$/.test(email);\n\n    if (!isValidEmail) {\n      hasError = true;\n    }\n\n    setEmail(currentValue => ({ ...currentValue,\n      value: e.target.value,\n      hasError\n    }));\n  };\n\n  const messageBlurData = e => {\n    let hasError = false;\n\n    if (e.target.value === '') {\n      hasError = true;\n    }\n\n    setMessage(currentValue => ({ ...currentValue,\n      value: e.target.value,\n      hasError\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ContactForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"contactForm\",\n      id: \"contact-form\",\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-header-cont\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"CONTACT ME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FormHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"NameInput\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            className: \"nameInput errorInput\",\n            placeholder: \"Name\",\n            onBlur: () => nameBlurData(),\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), name.hasError ? /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red'\n            },\n            children: \"Name is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 42\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"EmailInput\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            className: \"emailInput errorInput\",\n            placeholder: \"Email address\",\n            onBlur: emailBlurData,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), email.hasError ? /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red'\n            },\n            children: \"Email is incorrect or empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 43\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MessageInputConteiner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MessageInput\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: 3,\n            name: \"message\",\n            className: \"messageInput errorInput\",\n            placeholder: \"Message\",\n            onBlur: () => messageBlurData(),\n            onChange: e => setMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), message.hasError ? /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red'\n            },\n            children: \"Message is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 45\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SubmitButtonConteiner\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {},\n          className: \"submit-btn\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Contact, \"xTBC6n+Sj/hZvXliEXjZy4NLaVM=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/adamdagi/Desktop/Homework/adam-dagi-portfolio/src/pages/contact.jsx"],"names":["React","useState","Contact","name","setName","email","setEmail","value","hasError","touched","message","setMessage","nameBlurData","e","target","currentValue","emailBlurData","isValidEmail","test","messageBlurData","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n  \nconst Contact = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState({\n        value: \"\",\n        hasError: false,\n        touched: false,\n    });\n    const [message, setMessage] = useState('');\n    const nameBlurData = (e) => {\n        let hasError = false;\n        if (e.target.value === '') {\n            hasError = true;\n        } \n        setName(currentValue => ({\n            ...currentValue,\n            value: e.target.value,\n            hasError,\n        }));\n    };\n    const emailBlurData = (e) => {\n        let hasError = false;\n        const isValidEmail = /^([a-z0-9_.-]+)@([\\da-z.-]+).([a-z.]{2,6})$/.test(email);\n        if (!isValidEmail) {\n            hasError = true;\n        } \n        setEmail(currentValue => ({\n            ...currentValue,\n            value: e.target.value,\n            hasError,\n        }));\n    };\n    const messageBlurData = (e) => {\n        let hasError = false;\n        if (e.target.value === '') {\n            hasError = true;\n        } \n        setMessage(currentValue => ({\n            ...currentValue,\n            value: e.target.value,\n            hasError,\n        }));\n    };\n    return (\n        <div className='ContactForm'>\n            <form  className='contactForm' id='contact-form' noValidate>\n                <div className=\"contact-header-cont\">\n                    <div className=\"contact-header\">\n                        <h1>CONTACT ME</h1>\n                    </div>\n                </div>\n                {/* Row 1 of form */}\n                <div className='FormHeader'>\n                    <div className='NameInput'>\n                        <input\n                            type='text'\n                            name='name'\n                            className='nameInput errorInput'\n                            placeholder='Name'\n                            onBlur={() => nameBlurData()}\n                            onChange={e => setName(e.target.value)}\n                        />\n                        {name.hasError ? <p style={{ color: 'red' }}>Name is required</p> : null}\n                    </div>\n                    <div className='EmailInput'>\n                        <input\n                            type='email'\n                            name='email'\n                            className='emailInput errorInput'\n                            placeholder='Email address' \n                            onBlur={emailBlurData}\n                            onChange={e => setEmail(e.target.value)}\n                        />\n                        {email.hasError ? <p style={{ color: 'red' }}>Email is incorrect or empty</p> : null}\n                    </div>\n                </div>\n                {/* Row 2 of form */}\n                <div className='MessageInputConteiner'>\n                    <div className='MessageInput'>\n                        <textarea\n                            rows={3}\n                            name='message'\n                            className='messageInput errorInput'\n                            placeholder='Message'\n                            onBlur={() => messageBlurData()}\n                            onChange={e => setMessage(e.target.value)}\n                        />\n                        {message.hasError ? <p style={{ color: 'red' }}>Message is required</p> : null}\n                    </div>\n                </div>\n                <div className='SubmitButtonConteiner'>\n                    <button onClick={() => {}} className='submit-btn' type='submit'>\n                    Submit\n                    </button>\n                </div>\n            </form>\n                        \n        </div>\n    );\n};\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}